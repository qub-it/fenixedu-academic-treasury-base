- Bug Fix: When creating academic treasury events for targets, get the FinantialEntity from the builder, instead of inferring with the degree [#qubIT-Fenix-6602]

12.3.1 (05-02-2025)
- Refactor: Move FenixEduAcademicTreasuryPlatformDependentServices#finantialEntityOfDegree to AcademicTreasuryConstants [#qubIT-Fenix-6593]

12.3.0 (31-01-2025)
- Refactor: Remove unused and deprecated classes and methods of ITreasuryBridgeAPI [#qubIT-Fenix-6565]

12.2.2 (27-01-2025)
- Bug Fix: Fix debts grabbing and setting finantial document, in debts aggregation strategy, run with debts generation rules [#qubIT-Fenix-6562]

12.2.1 (14-01-2025)
- Bug Fix: In debt and payment reports, exclude personal emails which the property currentPartyContact is not null [#qubIT-Fenix-6541]
- Bug Fix: In PersonCustomer#findUnique(), fix the sort comparator to consider active customers as highest precedence than from person merge [#qubIT-Fenix-6386]

12.2.0 (08-01-2025)
- Improvement: Configure recalculation of tuition installments in tuition payment plan [#qubIT-Fenix-6235]
- Improvement: Support recalculation from tuition payment plan in manual tuition creation [#qubIT-Fenix-6235]

12.1.1 (16-12-2024)
- Bug Fix: When retrieving the PersonCustomer#getActiveCustomer(), validate that the customer found it is active. If it is not, throw exception [#qubIT-Fenix-6386]

12.1.0 (12-12-2024)
- Bug Fix: Avoid NPE when reading debts accounts for report [#qubIT-Fenix-6052]
- New Feature: Tuition Payment Plan Allocations [#qubIT-Fenix-6235]

12.0.3 (27-11-2024)
- Improvement: Improves DebtAccountReportEntryBean by adding active registrations field [#qubIT-Fenix-6052]

12.0.2 (19-11-2024)
- Improvement: Add unique degree and execution year to existing report [#qubIT-Fenix-6110]

12.0.1 (18-11-2024)
- Bug Fix: Fix calculation of registration tuition including other events for the same degree and execution interval, but excluding standalone and extracurricular tuitions [#qubIT-Fenix-6109]

12.0.0 (25-10-2024)
- New feature: Finantial document series by finantial entity [#qubIT-Fenix-5456]

11.18.1 (14-10-2024)
- Refactor: Replace usages of deprecated RegistrationStateTypeEnum [#qubIT-Fenix-2585]

11.18.0 (10-10-2024)
- Refactor: Apply pluggable validation in creation of customers [#qubIT-Fenix-5910]

11.17.8 (30-09-2024)
- Improvement: Add key to registration tuition debt concatenation, to have the degree simple name [#qubIT-Fenix-5846]
- Bug Fix: In calculation for tuition debts using the new registration tuition service, avoid closing debit notes to decrement amounts by product [#qubIT-Fenix-5854]

11.17.7 (24-09-2024)
- Refactor: Replace usages of deprecated RegistrationStateTypeEnum [#qubIT-Fenix-2585]

11.17.6 (13-08-2024)
- Refactor: Replace usages of deprecated RegistrationStateTypeEnum [#qubIT-Fenix-2585]

11.17.5 (29-07-2024)
- Bug Fix: Consider all registration states when executing the anull debit entries generation rule [#qubIT-Fenix-5538]

11.17.4 (19-07-2024)
- Improvement: Use excess payment settlemnt origin, to get a related treasury event, and use it to print registratrion info [#qubIT-Fenix-5528]

11.17.3 (09-07-2024)
- Bug fix: Fixes Excel upload on Treasury Imports via file [#ISCTE-FENIXEDU-711]

11.17.2 (08-07-2024)
- Bug Fix: Provide the degree associated with academic treasury event, for service requests [#UL-FMH-2278]

11.17.1 (04-07-2024)
- Improvement: Removes old poi types to fix compilation [#qubIT-Omnis-6199]

11.17.0 (03-07-2024)
- Improvement: Refactors code due to poi upgrade [#qubIT-Omnis-6199]

11.16.0 (01-07-2024)
- Refactor: Uses createCell method from ExcelUtil [#qubIT-Omnis-5961]

11.15.0 (26-06-2024)
- Refactor: Dissociate from AdministrativeOffice deprecated entity [#qubIT-Fenix-5448]

11.14.0 (20-06-2024)
- Improvement: Add more info to the result of debt generation rule execution and if there was a change in data [#qubIT-Fenix-5420] 
- Improvement: Debt generation rule strategy to annul debit entries [#qubIT-Fenix-5420]

11.13.0 (19-06-2024)
- Improvement: Support fixed due date calculation in tariffs [#qubIT-Fenix-5421]

11.12.0 (18-06-2024)
- Refactor: Prepare DebtAccountReportEntryBean to be used in reporting tool [#qubIT-Fenix-5422]

11.11.0 (17-06-2024)
- Improvement: Performs release for jdk 17 [#qubIT-Omnis-4737]

11.10.2 (11-06-2024)
- Refactor: Remove property methods of report bean, not used by any report [#qubIT-Fenix-5276]
- Improvement: Declare property methods in PersonCustomer to get the global due in debt amount [#qubIT-Fenix-5352]

11.10.1 (04-06-2024)
- Bug Fix: Apply payment blocking validation from debt processes, when generating reference codes with academic debt generation rules [#qubIT-Fenix-5130]

11.10.0 (03-06-2024)
- Refactor: Adds academic treasury classes for all web apps from academic treasury ui [#qubIT-Omnis-5875]

11.9.0 (31-05-2024)
- Improvement: Support scheduling for academic debt generation rules [#qubIT-Fenix-5345]

11.8.1 (21-05-2024)
- Bug Fix: Validate if there active customers with same fiscal number, only for active customers in Customer#checkRules [#qubIT-Fenix-5307]

11.8.0 (13-05-2024)
- Refactor: Debit note receive finantial entity and payor debt account [#qubIT-Fenix-4587]
- Refactor: Use ISibsPaymentCodePoolService#getDefaultDigitalPaymentPlatform method, to get default payment code pool for finantial entity [#qubIT-Fenix-4587]
- Refactor: Associate FinantialEntity to AcademicTreasuryEvent [#qubIT-Fenix-4587]
- Bug Fix: Create sibs payment request for ReservationTaxEventTarget, by finantial entity [#qubIT-Fenix-4587]
- Refactor: In method AcademicTariff#createDebitEntryForImprovement, do not create debit note. Instead create in AcademicTaxServices#createImprovementTax [#qubIT-Fenix-4587]

11.7.0 (02-05-2024)
- Refactor: Bring to PersonCustomer#getAllPendingInvoiceEntriesForPerson, the logic from module qubedu.module.academic-treasury-ui [#qubIT-Fenix-5207]
- Bug Fix: Fill the property DebtReportEntryBean#netExemptedAmount for credit entries also [#qubIT-Fenix-5223]
- Bug Fix: Declare two additional properties in DebtReportEntryBean and SettlementReportEntryBean, to present associated exemptions in different repor columns [#qubIT-Fenix-5223]

11.6.0 (19-04-2024)
- Refactor: Refactors code to isolate qub-docs dependency [#qubIT-Fenix-5085]

11.5.1 (16-04-2024)
- Bug Fix: Remove the logic of academic service request debt annulment, if before and after price amounts are different [#UL-FD-2063]

11.5.0 (15-04-2024)
- Refactor: Change invocation to create credit entries due to support for credit over exemptions [#qubIT-Fenix-5102]

11.4.2 (26-02-2024)
- Bug Fix: Remove atomic annotation in AcademicTreasuryEvent#getTreasuryEventDate method, which should be readonly [#ISCTE-FENIXEDU-419]

11.4.1 (01-02-2024)
- Improvement: Print credit entry academic information, if it is associated with treasury event [#qubIT-Fenix-4928]

11.4.0 (31-01-2024)
- Refactor: Change invocation of DebitEntry#create method to pass the finantial entity [#qubIT-Fenix-4587]
- Refactor: Remove deprecated ITreasuryBridgeAPI#createDebt [#qubIT-Fenix-4912]
- Bug Fix: Set of academical act blocking off and block academic acts on debt in standalone and extracurricular debit entries [#qubIT-Fenix-4914]

11.3.11 (24-01-2024)
- Refactor: Refactor ITreasuryPlatformDependentServices implementation [#qubIT-Fenix-4794]

11.3.10 (23-01-2024)
- Improvement: Declare methods to get refined entity objects in treasury report beans [#qubIT-Fenix-4794]

11.3.9 (18-01-2024)
- Refactor: Revert translation of exempted amount in portuguese [#qubIT-Fenix-4748]

11.3.8 (17-01-2024)
- Refactor: Change InvoiceEntry::getAssociatedFinantialEntity to InvoiceEntry::getFinantialEntity [#qubIT-Fenix-4587]

11.3.7 (12-01-2024)
- Improvement: Add method to AcademicTreasuryEvent, to calculate the registration tuition amount including other events that account for tuition [#UL-IGOT-1569]
- Bug Fix: Mark reservation tax event target as accounted for tuition, if it will discount in registration tuition amount [#UL-IGOT-1569]

11.3.6 (10-01-2024)
- Improvement: Add finantial entity information in debt reports [#qubIT-Fenix-4794]

11.3.5 (09-01-2024)
- Improvement: Add document certification information in debt reports [#qubIT-Fenix-4794]
- Bug Fix: Fill information in debt report for debit entries associated with custom academic debt treasury events [#qubIT-Fenix-4794]
- Improvement Fill settlement report with invoice entry net exemption [#qubIT-Fenix-4794]
- Bug Fix: Translate missing message key [#qubIT-Fenix-4748]

11.3.4 (03-01-2024)
- Bug Fix: Translate missing message key [#qubIT-Fenix-4748]

11.3.3 (28-12-2023)
- Refactor: Remove usage of execution degree finder by academic interval [#qubIT-Fenix-1590]
- Refactor: Declare property in DML for academic treasury event, to record the academic process number. To be used with the custom academic debt (WIP) [#qubIT-Fenix-4756]

11.3.2 (18-12-2023)
- Improvement: Adds fenixedu OSS DM [#qubIT-Omnis-4736]
- Improvement: Define personal email, institutional email and default email in reimbuserment report entry bean [#qubIT-Fenix-4691]

11.3.1 (12-12-2023)
- Bug Fix: Fix bug in PersonCustomer#switchCustomer, which prevents the creation of a new debt account [#qubIT-Fenix-4662]

11.3.0 (11-12-2023)
- Improvement: Apply balance transfer service automatically, if the balance transfer service implementation allows [#qubIT-Fenix-4662]

11.2.3 (07-12-2023)
- Bug Fix: Fill information in debt report for debit entries associated with custom academic debt treasury events [#qubIT-Fenix-4659]

11.2.2 (06-12-2023)
- Improvement: Add finantial entity info and net exemption to debts report bean [#qubIT-Fenix-4655]

11.2.1 (05-12-2023)
- Refactor: Implements properties in debt report bean, to make available for reports [#qubIT-Fenix-4646]
- Bug Fix: Fix reading the registration last state type description, in AcademicTreasuryEvent#registrationStateDescription [#qubIT-Fenix-4641]
- Bug Fix: Add missing label translation, about the error of duplicated academic treasury event for registration tuition payment plan [#qubIT-Fenix-4641]

11.2.0 (22-11-2023)
- New Feature: Creation of payment reference codes by finantial entity, in academic debt generation rule for payment codes strategy [#qubIT-Fenix-4600]
- Improvement: Method to obtain the associated finantial entity by academic treasury event [#qubIT-Fenix-4598]

11.1.6 (31-10-2023)
- Refactor: Rename method PaymentRequestLog#isInvocationSuccess to PaymentRequestLog#isOperationSuccess [#qubIT-Fenix-4327]

11.1.5 (27-10-2023)
- Bug Fix: NPE in creation registration tuition, in cases where the amount for a tuition installment is zero [#qubIT-Fenix-4417]
- Bug Fix: When editing installment, save the installment order [#qubIT-Fenix-4401]
- Refactor: Remove the temporary fix flag for the correct academic tax debit entry date [relates to fix applied in version 8.6.7 of 16-02-2023]

11.1.4 (18-10-2023)
- Refactor: Rename method parameter for better code readability [#qubIT-Fenix-4459]
- Improvement: Add to AcademicTreasuryEvent a method to merge with a target person, which basically set the person and allow merge data of treasury event targets. For now support only for ReservationTaxEventTarget [#qubIT-Fenix-4459]

11.1.3 (28-09-2023)
- Refactor: Fix the academic treasury event degree association and use the DML AcademicTreasuryEvent and Degree relation (#qubIT-Fenix-4374)
- Bug Fix: Fix tuition payment plan tuition deletion for many degree curricular plans. The reorder of tuition payment plan orders was fixed (#qubIT-Fenix-4401)
- Bug Fix: Fix tuition payment plan creation, when the tuition payment plan orders are not strictly sequential (<previous order> + 1) (#qubIT-Fenix-4402)
- Bug Fix: Add specific method factory to create TuitionPaymentPlanBean, when copying a tuition payment plan, to fix the copy of tuition calculators (#qubIT-Fenix-4403)

11.1.2 (21-09-2023)
- Improvement: In exemptions request by file, read the product of treasury event by code, besides reading by description (#UL-FC-4400)
- Improvement: In exemptions request by file, if the debit entry name is not specified, consider only debit entries in treasury event which are not interests (#UL-FC-4400)

11.1.1 (19-09-2023)
- Refactor: Remove relation between TreasuryEvent and TreasuryExemption. the treasuryEvent can be infered in treasuryExemption by accessing the associated debitEntry
- Refactor: Added method to know what is the associated tuition payment plan of calculator, since it might be connected to a aggregator calculator
- Bug Fix: Add missing error label
- Bug Fix: Override LegacyAcademicTreasuryEvent::getDegreeCode and get the associated exemption to discount in tuitions

11.1.0 (14-09-2023)
- Improvement: Remove synchronized keywords to avoid contention. Replace StringBuilder with StringBuffer to avoid synchronized facility
- Improvement: Associate academic debt generation rules by finantial entity

11.0.2 (30-08-2023)
- Bug Fix: Fix bug in standalone and extracurricular tuitions, using the new model of calculators

11.0.1 (28-08-2023)
- Bug Fix: Fixes and improvements in registration tuition service
- Improvement: Remove superfluous check rules in PersonCustomer::switchCustomer

11.0.0 (14-08-2023)
- Improvement: Support in legacy treasury event, the account as tuition and discount tuition amount
- Improvement: Add minimum and maximum amount in tuition calculator aggregator
- Improvement: Support in the legacy treasury event, the exemption type to discount tuition amount
- Improvement: Add in the debt report invoice entries, the invoice entry code in the end
- Improvement: The academic event discount in tuition fee with treasury exemption is true by default
- New feature: Domain model for exemption by statutes
- Improvement: Unit tests for tuition payment plans calculations
- Improvement: Add new column in debt report for invoice entries, with the code of invoice entry

10.3.1 (31-07-2023)
- Refactor: Pass in the constructor, the description of legacy academic treasury event

10.3.0 (25-07-2023)
- New Feature: New tuition condition rule, to check the registration ingression year (or start execution year)
- Bug Fix: Only create tuition by force, in create academic debts strategy executed by academic debt generation rules, if the registration is to pay gratuities
- Bug Fix: In tuition importation, fix the ingression type condition rule importation
- Improvement: Allow default tuition payment plan configured with other installment calculation amounts than fixed amount type. Only check if the default tuition payment plan is fixed amount when used as indexed for ECTS calculation amount
- Refactor: Remove the check that all tuition payment plans are for only one finantial entity.
- Bug Fix: Fix installment name buider, when using the degree code

10.2.0 (18-07-2023)
- Refactor: Remove ITuitionTreasuryEvent methods from AcademicTreasuryEvent
- Refactor: Rename AcademicTreasuryEvent::getAmountToPay to AcademicTreasuryEvent::getAmountWithVatToPay
- Refactor: Rename AcademicTreasuryEvent::getExemptedAmount to AcademicTreasuryEvent::getNetExemptedAmount
- Refactor: Replace invocation of TreasuryEvent::getAmountWithVatToPay(customer, null) to TreasuryEvent::getAmountWithVatToPay(customer)
- Refactor: Rename ReservationTaxEventTarget::getAmountToPay to ReservationTaxEventTarget::getAmountWithVatToPay
- Refactor: Remove references of ITuitionTreasuryEvent in AcademicTreasuryBridgeImpl
- Refactor: Add TuitionInstallmentTariff property in bean TuitionDebitEntryBean, to help in recalculation of tuition installments
- Refactor: Add helper method TuitionInstallmentTariff::createRecalculationDebitEntryForRegistration, to create an additional recalculated installment debit entry
- Refactor: Remove empty method TuitionInstallmentTariff::updatePriceValuesInEvent
- Improvement: Add new service to create tuition payment plan debts, that support recalculation of installments and and easier fluid interface to pass the arguments to the service
- Refactor: Reservation Tax now requires treasury exemption
- Refactor: Overloaded methods for TuitionInstallmentTariff::amountToPay and TuitionInstallmentTariff::createDebitEntryForRegistration, to receive ITuitionRegistrationParameters, in order to be able to receive more parameters to control tuition calculation amounts
- Refactor: Overload TuitionPaymentPlanCalculation::getTotal to receive ITuitionRegistrationParameters, to be more flexible in receiving parameters

10.1.0 (10-07-2023)
- New feature: Tuition payment plan aggregators

10.0.0 (07-06-2023)
- New feature: Domain model tuition payment plan calculators

9.0.0 (25-05-2023)
- New Feature: Dynamic interest rate calculators

8.7.3 (23-05-2023)
- Improvement: Present document certification number and date in debt and payments reports

8.7.2 (17-04-2023)
- Bug Fix: Add temporary trigger to fix labels of due date calculation type #UL-REIT-3144

8.7.1 (12-04-2023)
- Improvement: In the process of creating registration tuition debts, check if tuition will be created before check if the person has fiscal data properly filled

8.7.0 (10-03-2023)
- New Feature: New academic debt generation rule strategy to create tuition installments and academic debts

8.6.9 (08-03-2023)
- Bug Fix: Consider all registrations of degree curricular plan, and not only registrations with active curricular plan

8.6.8 (06-03-2023)
- Bug Fix: Validate if custom academic debt amount is positive
- Bug Fix: In treasury event details, present the custom academic debt date

8.6.7 (16-02-2023)
- Bug Fix: Apply fix for debt date for academic tax, when student is not enrolled in curricular units

8.6.6 (15-02-2023)
- Improvement: Do not check if a finantial document maybe be integrated with success

8.6.5 (10-02-2023)
- Refactor: Remove method Customer::getFiscalCountry and other related methods of similar name. This method cause some confusion and is replaced by Customer::getAddressCountryCode

8.6.4 (09-02-2023)
- Bug Fix: Fix NPE in creating tuitions for registration, specifically in calculating the discounts table

8.6.3 (07-02-2023)
- Bug Fix: In exempting tuition installments, when creating tuition debts, consider only treasury events of the same degree as the registration

8.6.2 (30-01-2023)
- Refactor: Replace reference for FinantialDocumentEntry::setFinantialDocument by FinantialDocumentEntry::addToFinantialDocument
- Bug Fix: Consider totally exempted debit entries, created in CreateDebtsStrategy, which might be exempted due to reservation taxes

8.6.1 (26-01-2023)
- Refactor: method to edit course cost function

8.6.0 (04-01-2023)
- Refactor: Split TreasuryEvent::invokeSettlementCallbacks method in two, one receiving the settlement note and other the treasury exemption

8.5.4 (15-12-2022)
- Improvement: Check if there is already an active customer with the same fiscal number, only within the instances of the subclasses AdhocCustomer and PersonCustomer
- Improvement: Allow set code in Reservation Tax, in creation and edition

8.5.3 (12-12-2022)
- Bug Fix: Support delete reservation tax
- Refactor: Remove association of product and finantial entity with the reservation tax event target

8.5.2 (08-12-2022)
- Bug Fix: Protect with try-catch for NPE, the customer identification and name retrieval in getting the error description, in the debt report
- Improvement: Discount tuition amount from other treasury events with exemption

8.5.1 (23-11-2022)
- Refactor: Replace references of RegistrationStateType for RegistrationStateTypeEnum

8.5.0 (10-11-2022)
- Improvement: Support assign payor debt account to tuition installments

8.4.9 (03-11-2022)
- Improvement: Allow the creation of individual tuition payment plan installments
- Refactor: Replace references of RegistrationStateType for RegistrationStateTypeEnum
- Refactor: Method to create custom academic debts for default finantial entity

8.4.8 (20-10-2022)
- Refactor: Remove references of AdministrativeOffice in AcademicTariff and FinantialEntity

8.4.7 (14-10-2022)
- Refactor: Remove references of AdministrativeOffice in AcademicTariff

8.4.6 (23-09-2022)
- Refactor: Declare AcademicTreasuryEvent::getEventTargetCurrentState to retrieve to current state of the process associated with treasury event

8.4.5 (22-09-2022)
- Refactor: Do not throw exception in service to create customer if it is missing, instead return false if it is not created. The callers decide if exception is thrown or not. If exists return true.
- Improvement: Support creation of sibs payment references for extracurricular or standalone tuition debts, in academic debt generation rule.

8.4.4 (01-08-2022)
- Bug Fix: In finding the best academic tariff, if the administrative office is null then return the tariff for finantial entity

8.4.3 (19-07-2022)
- Refactor: Remove deprecated PaymentPenaltyEventTarget entity
- Refactor: Do not mark AcademicTariff::findMatch by CycleType as not deprecated
- Refactor: Do not register the AdministrativeOffice in the AcademicTariff entity

8.4.2 (05-07-2022)
- Refactor: Implement import and export operations for AcademicDebtGenerationRuleRestriction class and subclasses, in order to be able to migrate from other systems
- Refactor: Set constructor and checkRules of AcademicDebtGenerationRuleRestriction and subclasses as public in order to migrate

8.4.1 (30-06-2022)
- Bug Fix: Fix the missing return from calculating the tariff when the academic service request has the cycle type

8.4.0 (24-06-2022)
- Refactor: Change relation between ReservationTaxEventTarget and ExecutionInterval, instead of ExecutionYear
- Improvement: Support consumers when invoking ReservationTaxEventTarget::handleTotalPayment
- Bug Fix: Various bug fixes and improvements in ReservationTax

8.3.9 (21-06-2022)
- Refactor: When creating consider academic tariffs with AdministrativeOffice or without AdministrativeOffice as the same, when checking if there is a overlapping tariffs
- Refactor: Find match of academic tariffs for degreeType, degree or cycle type with or without AdministrativeOffice

8.3.8 (21-06-2022)
- Bug Fix: Fix condition in check rules for requirement of TuitionInstallmentTariff fixedAmount
- Bug Fix: Check if TuitionPaymentPlan.customizedName is not null before filling it in TuitionPaymentPlanBean
- Bug Fix: Intialize map between condition and values in TuitionPaymentPlanBean

8.3.7 (18-06-2022)
- Bug Fix: Return degreeCode for AcademicTreasuryEvent, for standaloneTuition, extracurricularTuition, improvementTuition and customAcademicDebt

8.3.6 (02-06-2022)
- Refactor: Return code of PersonCustomer from Customer::getCode instead of externalId

8.3.5 (17-05-2022)
- Bug Fix: Fix personal email field in debt report

8.3.4 (02-05-2022)
- Improvement: Add reimbursement state in reimbursements report
- Improvement: Add more fields to treasury exemption reports
- Improvement: Report debt account with customer code
- Bug Fix: Allow parametrization of tuition payment plans in one finantial entity, given degree curricular plan and execution year
- Bug Fix: Remove erroneous and misleading method TuitionPaymentPlan::finantialEntity. TuitionPaymentPlan already associates to Finantial Entity

8.3.3 (22-04-2022)
- Bug Fix: Use VAT find with current dateTime, instead of the debt date

8.3.2 (13-04-2022)
- Refactor: Read label from bundle in static block, to catch and print any errors that might occur (#UL-FC-3159)
- Refactor: Declare method to get Customer::code attribute from PersonCustomer. This method is just to check that codes are set right 

8.3.1 (17-03-2022)
- Bug Fix: Throw exception with the error description, when a value cannot be translated in tuition payment plan rule condition

8.3.0 (16-03-2022)
- Refactor: Mark ExemptionsGenerationRowResult::exemptedAmount as deprecated and replace with ExemptionsGenerationRowResult::netExemptedAmount
- Improvement: Global setting to enable/disable academic debt generation rules periodic execution
- Improvement: Support callbacks for each academic debt generation rule execution. An example of callback is the progress bar to trigger the execution in UI
- Improvement: Filter execution of academic debt generation rules, by type and execution year

8.2.5 (07-03-2022)
- Bug fix: Remove RC module version dependency
- Refactor: Mark TreasuryExemption::valueToExempt as deprecated and replace with TreasuryExemption.netAmountToExempt
- Refactor: Mark DebitEntry::exemptedAmount as deprecated and replace with DebitEntry::netExemptedAmount

8.2.4 (19-02-2022)
- Improvement: Export documentObservations and documentTermsAndConditions in report
- Improvement: In reports export the personal email

8.2.3 (26-01-2022)
- Bug Fix: Add missing exception labels
- Bug Fix: Throw correct exception, to translate the message in presentation
- Bug Fix: Fix person fiscal number validation, in person customer creation
- Improvement: Export observations and termsAndConditions fields of settlement note

8.2.2 (04-01-2022)
- Bug Fix: In close debts academic debt generation rules, check if degree curricular plan, active in registration in the execution year, is in the list of DCPs associated with the rule  

8.2.1 (06-12-2021)
- Improvement: Add academic treasury event type
- Bug Fix: Check of AcademicTariff.maximumAmount is not negative

8.2.0 (19-11-2021)
- Improvement: Throw exception when create a person customer to a person already with person customer
- Bug Fix: Only write ingressionType if it is set in the registration
- Refactor: Handler for settlement note payment, equal to declared in AcademicTreasuryBridgeImpl
- New Feature: Reservation taxes, which can discount amount from tuition debts
- Improvement: Allow set interest type in AcademicTreasuryTargetCreateDebtBuilder
- Bug Fix: Get execution year name from treasury event target
- Refactor: Predicates in TreasuryEvent to check if it is related with tuition debts, and if the event discount on tuition total amount
- Refactor: Handle settlement note payment to HandleSettlementNotePayment class



8.1.1 (09-11-2021)
- Bug Fix: Align headers in debt reports

8.1.0 (25-10-2021)
- Improvement: Add method to find academic custom debt AcademicTreasuryEvent 
- Improvement: Change API of academic debt builder to receive the required DateTime when parameter

8.0.4 (24-09-2021)
- Bug Fix: Refer to extracurricular tuition group when creating infered tuition for extra curricular course, instead of standalone tuition group

8.0.3 (16-09-2021)
- Improvement: Add date to key of description of custom calculator in Tuition payment plan 
- Improvement: In standalone and extracurricular tuitions, save the custom calculation description in debit entry instead of academic treasury event
- Bug Fix: In Treasury Bridge API, if there is not finantial entity associated to a degree return null as debt account

8.0.2 (29-07-2021)
- Improvement: Close debit notes academic debt generation rule allow close of interests (#UL-IGOT-1129)
- Improvement: Add document observations & terms and conditions to be exported in debt report beans

8.0.1 (27-07-2021)
- Bug Fix: Error on copy of plans, invisible fields not are deleted
- Bug Fix: Reverted deletion of  PaymentPenaltySettings and PaymentPenaltyEventTarget (#UL-ISEG-1757)

8.0.0 (26-07-2021)
- Refactor: Allow specification of different product for standalone/extacurricular payment plans
- Improvement: Refactorization to use CustomCalculatorsMap on fillProperties
- Refactor: Refactor academic domain to dependent platform services
- Refactor: Move Bennu specific service implementations to fenixedu-academic-treasury-ui

7.2.2 (13-07-2021)
- Refactor: Remove excludesIfMatches property, which is not used
- Refactor: Use academic treasury dependent platform services to translate statute type description

7.2.1 (18-06-2021)
- Bug Fix: Remove and replace condition tuition rule beans

7.2.0 (17-06-2021)
- Refactor: Deprecate PaymentPenaltyEventTarget
- Bug Fix: Include other treasury events than AcademicTreasuryEvent, associated with debt account 

7.1.1 (15-06-2021)
- Refactor: Use TuitionPaymentPlanOrder to find a tuition payment plan by degree curricular plan

7.1.0 (07-06-2021)
- New Feature: Shared tuition payment plan between curricular plans, check if payment plan is reachable, tuition conditions, tuition installments custom calculators
- Improvement: Use default payment platform to Automatic rules and Academic services
- Improvement: Add settlement note ERP certification date
- Refactor: Refactor payment penalty from fenixedu-academic-treasury-base to fenixedu-treasury

7.0.3 (10-05-2021)
- Refactor: Replace discontinued PaymentCodePool by DigitalPaymentPlatform

7.0.2 (13-04-2021)
- Bug Fix: Invoking deprecated payment request service (UL-ISEG-552, UL-ISEG-560)

7.0.1 (12-04-2021)
- Bug Fix: Do not consider as in academic debt, debit entries in compliant open payment plans
- Improvement: Show debt report file size as kb, if the size is lower than 1MB
- Bug Fix: Validate that debt report request's endDate is not before beginDate

7.0.0 (10-04-2021)
- New Feature: Digital Payment Platforms

6.3.0 (10-04-2021)
- Refactor: Digital Payment Platform domain model

6.2.1 (25-03-2021)
- Improvement: Segregate information included in debt report request, based in type chosen by user

6.2.0 (23-03-2021)
- New Fixture: Payment penalty taxes

6.1.0 (10-03-2021)
- Refactor: Builder class to create academic treasury target debts

6.0.0 (01-03-2021)
- New Feature: Payment plans for debit entries

5.3.3 (31-01-2021)
- Refactor: Added messages translation used by 3D Secure address select page (jsp) 

5.3.2 (13-11-2020)
- Refactor: Replace usage of deprecated method Degree.getExecutionDegrees(AcademicInterval)

5.3.1 (16-09-2020)
- Bug Fix: If there are not debit entries to process in creation debt generation rule, throw exception to abort transaction and prevent tuitions being created

5.3.0 (13-09-2020)
- Bug fix: Prevent exception in generating tuition when zip code does not exist

5.2.4 (07-09-2020)
- Bug fix: Improve debt report request processing, to improve memory usage

5.2.3 (14-08-2020)
- Bug Fix: Filter correctly tuition payment plans

5.2.2 (27-07-2020)
- Bug Fix: Fix error of payment plan copies with no fixed due date set

5.2.1 (14-07-2020)
- Refactor: Disable excludeifMatches for now to evaluate if it is necessary

5.2.0 (14-07-2020)
- New Feature: Support multiple restrictions in academic debt generation rule

5.1.1 (08-07-2020)
- Bug Fix: On copy tuition payment plans, set correct dates in installments regarding the new execution interval

5.1.0 (07-07-2020)
- New Feature: Copy academic debt generation rules between execution intervals
- New Feature: Copy tuition payment plans between execution intervals
- Refactor: Retrieve student's statutes in execution year by his registration

5.0.4 (25-05-2020)
- Refactor: Method to retrieve all academic debt generation rule entries of tuition type

5.0.3 (13-05-2020)
- Bug Fix: Portuguese translation in labels
- Refactor: Listener to detect when FinantialEntity is deleted in order to disconect relations
- Bug Fix: Fix AcademicDebtGenerationRule edition in fields of minimum amount to generate payment reference code

5.0.2 (07-05-2020)
- Bug Fix: fix typos in bundles

5.0.1 (05-05-2020)
- Improvement: Force creation of tuitions with the academic debt generation rules

5.0.0 (24-04-2020)
- Refactor: Remove web files, spring controllers and bennu specific classes leaving domain classes

4.6.1 (08-04-2020)
- Refactor: Setting the debit note due date with the maximum due date of debit entries is performed in the debit note close operation

4.6.0 (06-04-2020)
- Refactor: Remove monthly interest calculation's configuration from the tuition and academic tariffs

4.5.1 (04-04-2020)
- Refactor: Upgraded dependency of fenixedu-academic-core (removal of organizational Units subclasses)

4.5.0 (26-03-2020)
- Refactor: To split fenixedu-treasury module in domain and ui module, change IForwardPaymentController package
- Refactor: Get IForwardPaymentController by class registration by online payments implementation

4.4.9 (17-03-2020)
- Refactor: Upgrade parent artifact id version

4.4.8 (09-03-2020)
- Improvement: SIBS OPPWA: default address fields
- Bug Fix: In Person delete listener, delete the active person customer if defined
- Improvement: Show registration ingression date and registration protocol in automatic debt creation interface 
- Improvement: Add degreeType, degreeCode, degreeName and executionYear to settlement entries report
- Bug Fix: SIBS OPPWA: Access payment card widget with POST, after selecting address. Ensure the SIBS Merchant Transaction Detail is not rewritten.

4.4.7 (27-02-2020)
- Improvement: In payment with credit card with SIBS OPPWA, select one of the registered addresses to send to SIBS

4.4.6 (12-02-2020)
- Bug Fix: Consider academic service request service mapping entry additional description in debit entry creation
- Improvement: Add settlement origin document number in reports
- Improvement: Filter sibs transaction details by date interval in report

4.4.5 (30-01-2020)
- Refactor: Upgrade dependencies in pom

4.4.4 (29-01-2020)
- Refactor: Replaced semester references by childOrder

4.4.3 (14-01-2020)
- Refactor: API for debt creation for IAcademicTreasuryTarget along with treasury domain entities instead of interfaces

4.4.2 (09-01-2020)
- Refactor: Clean references for getCountryCode() method which is deprecated, replaced by getAddressCountryCode()

4.4.1 (26-12-2019)
- Refactor: removed ExecutionSemester reference in dml
- Refactor: updated academic-core module dependency

4.4.0 (04-12-2019)
- New Feature: MBWay payments interface

4.3.1 (04-11-2019)
- Improvement: Create SAFT address as non default physical address
- Refactor: Disable RegistrationService bennu signal handler

4.3.0 (22-10-2019)
- Bug Fix: Throw expcetion if academic tariff is not found when creating academic debt associated with tresury event target
- Refactor: Replace ExecutionSemester by ExecutionInterval
- Refactor: Service to ensure debt account for person is created

4.2.0 (26-09-2019)
- Refactor: upgraded fenixedu-academic-core

4.1.0 (18-09-2019)
- New Feature: Create payment reference code for interest debit entries

4.0.5 (18-09-2019)
- Refactor: Add isSuccess() to return getSuccess() of type boolean

4.0.4 (16-09-2019)
- Bug Fix: Use enrolment date in execution year, instead of current date for entry date of academic tax debts
- Improvement: Print error in creating debt account in log, in registration creation

4.0.3 (05-09-2019)
- Bug Fix: In aligning due date in academic debt generation, do nothing if the best due date is not found instead of throwing an exception

4.0.2 (04-09-2019)
- Fix: 1A1V document with tuitions

4.0.1 (30-08-2019)
- Improvement: On creating academic debts, Add to registration designation the protocol and registration start date, in order to distinguish two registration with same degree

4.0.0 (07-08-2019)
- Refactor: Associate finantial entity to an unit, beside administrative office
- Refactor: Use default locale academic entities methods to retrieve designation
- Refactor: Academic entities queries (ex: all statutes) is provided by service
- Refactor: Academic fiscal number and country is provided by service plugged
- Refactor: Support for custom academic debts
- Refactor: Support in entity model for treasury debt report for degree and execution year and selection of type of debts
- Refactor: Support for logs in automatic debt generation execution 
- Refactor: Disable alignment of due dates on close debts generation
- Refactor: Use fiscal address country instead of deprecated fiscal country code
- Bug fix: Save enrolment name in default locale in properties map of tuitiob debit entry
- Bug fix: Get annulment message in default locale
- Bug fix: Show creation date of debt generation request

3.0.1 (31-07-2019)
- Refactor: Upgrade dependency of fenixedu-academic-core (changed domain relations from ExecutionSemester to ExecutionInterval)

3.0.0 (29-07-2019)
- Refactor: Save fiscal address from Person in Customer address fields
- Refactor: Deprecate fiscal country, instead fiscal address country is used and saved in Customer

2.5.3 (26-07-2019)
- Refactor: Upgrade fenixedu-academic-core dependency

2.5.2 (23-07-2019)
- Refactor: Delete AcademicTreasuryBootstrap, update dependency fenixedu-treasury version 

2.5.1 (19-07-2019)
- Refactor: Update fenixedu-treasury dependency version
- Bug Fix: Remove payment code pool association on delete service request mapping entry

2.5.0 (18-07-2019)
- Refactor: Changes in payment reference code generation API due to Online Payments Gateway integration in fenixedu-treasury module

2.4.0 (12-07-2019)
- Refactor: Rename treasury domain file entities to their original class name

2.3.3 (08-07-2019)
- Bug fix: Set academic information in report beans for target treasury event associated debts and payments

2.3.2 (26-06-2019)
- Refactor: Upgrade fenixedu-academic-core dependency
- Refactor: Upgrade fenixedu-treasury dependency

2.3.1 (05-06-2019)
- Copy whenProcessed property in MassiveDebtGenerationRequestFileDomainObject

2.3.0 (03-06-2019)
- Represent domain entity files as domain entities
